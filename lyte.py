print('This is lyte.py.  Pure.py files in the browser. It should be used by lyte.html')

try:
    from pythonize import strings
    strings()
except ModuleNotFoundError:
    print('no need for pythonize')


def filterImports(s):
  lines=s.split('\n')
  for i,line in enumerate(lines):
      if 'import' in line:
          lines[i]='##' + lines[i]
  return '\n'.join(lines)


def say(*args):
    for arg in args:
        try:
            document.body.innerHTML += ' ' + str(arg).replace('\n','<br/>')
        except NameError:
            print(' ' + str(arg).replace('\n','<br/>'))

def Keys(o):
    return [k for k in o]

def Values(o):
    return [o[k] for k in o]

def Items(o):
    return list(zip(Keys(o), Values(o)))

d={'one': 1, 'two':2}

def demoOfLyte():
  try:
      document.body.innerHTML=''
  except NameError:
      print('--in python--')

  say('<h1>Demo of lyte</h1>')
  say('<a href="https://glitch.com/edit/#!/lyte>https://glitch.com/edit/#!/lyte">https://glitch.com/edit/#!/lyte</a>. \n')
  say('This content is generated by a pure python file called lyte.py \n')
  say('index.html put lyte.py and test.py into the Rapydscript virtual file system \n')

  say('<h2>The say() function</h2> ')
  say('Say works like print,', 'but for document.innerHTML:')

  say('<hr/>')
  say('<h2>Keys, Values, and Items for {} objects.</h2> ')
  try:
      say('  Javascript Objects {} support both brackets and dot-notation:  D.one:', d.one, "d['one']==d.one is in fact", d['one']==d.one,'\n')
  except AttributeError:
      pass
  say('  Convenience functons make them usable like python dicts:<b> Keys(d), Values(d), Items(d) </b>\n')
  say(f'   Keys(d):  <b> {Keys(d)  } </b>\n') #formatted strings are great
  say(f'   Values(d):<b> {Values(d)} </b>\n')
  say(f'   Items(d): <b> {Items(d) } </b>\n')
  say("""<pre>
  for k,v in Items(d): #python loops are nice
      say(f'{k}:{v}')
  </pre>
      """)
  for k,v in Items(d): #python loops are nice
      say(f'{k}:{v}    \n')
  say('<hr/>')

  say('<h2>Console and Devtools</h2>')
  say("""With rapydscript, "print" and error messages go into the console.
  <b>Right click and choose "Inspect" to see the console and the devtools</b>""")
  print('THIS SHOULD BE IN THE CONSOLE')

  say("""<hr/> <ul><h2>Theory of operation.</h2></ul>
      <li>     Rename this.html to whatever.html (any filename you want)
      </li>
      <li>     Modify the pyInstall lines to include your rapydscript-compatible python files
      </li>
      <li>     Make sure Rapyscript.js can be found by whatever.html
      </li>
    </ul>
  """)

if __name__=='__main__':
      demoOfLyte()
